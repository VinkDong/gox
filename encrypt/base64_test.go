package encrypt

import (
	"testing"
)

var (
	testString1 = "\n"
	testString2 = ""
	testString3 = "a"
	testString4 = "TFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0ZGSlFrRkJTME5CVVVWQmVXbFBSbG8wZFRaUVExQlZSVzB3VDFsVFNHeERZVUUyVG1ObE5WSXZUek5GTW05WVFqZzRUSGh1U0ZKYVpuZDBDa2g2VWl0RVNHUjRNRWNyZG5FMmVXVmpOelpaZEVnNU9GQnNNMlEzWjA1dWNsVTNOa2g1ZVhOQlZYQkxkRU0zVTNORWQxVTVkWGRaVUhGaE9Gb3hWRmNLZDA1Q05FdDRjemhXWjNSNVYzSnlSR0V5ZWtaWmFFUmtNV2hIV0dOVmQySnlTMkZtZDNocVJEVlhiemR6VjA5RE9FUjNWR0pOVnpWYVMySkRWazB5ZEFwTlJuQmlhSFV5WkV4amJYSkdhRVpEVTA1NFVqSnZkMGxEZUZKeWNIaDZTVFZHY0d4eWJWTlVWbHBzWlV0ME5tdEJiMFpMY25kNVZrMWFTR1pCYTFKbENsTk9WMHBhWlU5VGRFbEJjMGh3ZFVKaVpDdEpiSGxQZFVKbGFTOUlZM2hPVEM4Mk1FSXdSVVpDU0hnMGIyMHJOR1o2T1ZCWVFTdFBaRXhTUWs5TFFVRUtNVWh2VVhKQ00wbEVlRWd2ZUZJd0sxTmhXVEZ6UkdkM1dVWmxTVWMxVUZCdmJEYzBZWGRKUkVGUlFVSkJiMGxDUVVSdVpWWllSRUpXWWpKc00wTTJlUXBRWlRKak1FZzRhU3RqWTNaMVIwWmhObXQ1UzJ0TVJsSnRkVTVwTjJwdGRVdG9WRWMyUm1OV1ZYVlpSRTB4TWtsbE5IaFVVV3hDWVU1MU1UY3paVGh1Q2pGdFUwNVBXbTR6U21ZM2QybzVXbkJ0VkU5UE16aHRXVFpaTHpKR0wxaFdSMlV6TVZGS1NFZHhSVEZTTVZwcldEUndORGhqTXpKU2NYQkRRVlpOVkVFS2NubFBUVk5EZVVsVFNIcEVTSFpsTTNJeVMzSk5SSGg0YkhCUGVtb3lTVkJXZUV0a2RFcDFhVnBEUkc5Q1ZraFZaMkoySzA1YVVESTBSWEp4VlhORU13cE5iakpxTnpWQ2NpczNiMUY1U2xjMGRIaFNiVVpEVDBFMk5ESlhRazloTTNnMGNIZFdWRWhzTVN0bVRWSlNReTlKVDB4R1UycFVaamg1Tm04M1FscGxDalZWVGs1a2NWaFRSMDkxV0RKdFQxTXpaa1F2YkRSdmQwWnlRWFp0WnpWT1owTnVRV0YyVVU0d1ExZFhUR3hsU0ZKM1ZYZHpNMkZCZWxKQ05YTTNOV2NLWkRrd1JHOVRSVU5uV1VWQk9IZHlhRnBQVUdGdGVXMW5WVFZNYTJOVmJYRTFha2h1WTI5T1YyeERSSG95TjFBdmNGTklhemhoSzA1b05GZFdRbHB4TmdvMk1tb3diVzVrZW5sVWRtSjZlR3h0TVVSMllXWkpjVXRxWmtkRmJqWXJaakE0T0RaelEzbHhUemhuWldWeWMyOHdkV2xpV2pCR09IZHFTamh0Um5CNkNsQkRObXRTWkUxdldFWllhVVIxYkhGVVVYb3ZhRkowYjBobE9GUnhjRlo2ZG5sSlFtdHdPWEJaZEUxSWNYQTNaQ3N5YWpCUFJFMURaMWxGUVRGUGNHWUtjRlV3VUhaWFdXaFNabFUwWlRKa1duSlNja0ZKVGxWWFkzVkdhVFJUZDB0TWJEQmFNRFp4YUhWS1VuZEVRM2d5VEZwdVNHaEVkVkpFZW1sR1dIZzNRUXBzVUdGb04ySTFNa3R2YW05d2VGUkxTbm92UW5sVEszY3JjQzlrZEhSSFQxSXlhVFZ6Y25kWmJXaEdkblJTTkZWcFRGTTRZbTh2TlRSSU5taEtORGhNQ214eVREWkJUMEZJV2twdGNqWTFkVEJwY0ZWdmEydFJkMnhuWkVKNEt6RXpXVEZZS3pWMWEwTm5XVVZCTkdwUVMwOHJRbXcwWlhkSlRVVkRWRXBYTVhZS1FtWnBSV1JYZDFBNVMxbEhNRkZFYVdWdmNteFVjSGRhYlZoNVYybHFWRTF4TjFaMmEzbFRRMDh4VkdVM1FUSXdVM1YxTmtkb1praG9VSGswWkhaak5ncFNhVk5zWkhKeVlscG1RMGhxWVhOTUx5dENSMWwyTDNOWlkwbHFaa3ByVTJvemVrcHVPRTAzTWxaVFJuQlhUbEpqU1RCalpFbEthR3RTY1cxeWVXMVRDa3BPTkRsdlNESkdNVVpwWXpGbmQzVm9iMUJWWVZWclEyZFpSVUZ2VERWS1l6TjZXV042T1ZaM05FVTVTVlF5U0c5SU4yWnhiVzR4ZUhOdFQxbDZNV2tLWld4d2FtdDZMM2hXUnpoTmIwMVJOR1pJYW5FdmJGRlRWV2hHZWpjM2NFSXpjbFJOZWpkaVNtTTFaR3hRYVRoa05UY3ZhM2c0VlhaemFXUmlkR2hvUkFwbFNHOURTMGxUUm1Sc2RsQnZSV1ZVWWxKdk1sbExjRzFHYVhwRU9HZ3JNblZvUm5CWFduWktUMUpSYW1wWU9VTk5TbGx1ZVZSWFpVVk5XblI2VldwckNuQTJVbGhETTBWRFoxbEZRV3RSTW5WWlVFTkRRMXBPYTFKVVUzbElkVGwxTkc5VmVrZzFkMkVyYmtST1FtUkJNRlJJWWxaWWVFaG5ZMlJtUTNWT1UxSUtWR2hUVTNJNVdWUjZTMHhGZEVRNWFtZFVjSEJNWWtGTVIyOTBUM0Z2ZGpCVlVXVjBkMEYxWkUxamRDOXZRV1oxZDFoM1FrUTVibVlyYjNnd1ZIaDFkd3BvYWswemNqQk9iMGxVVXpSMk5VUkJkbFp0UlRrelJtcGFVV3B3TnpCSlVFZExOSGgzVmxkdE1IQlhZakZ0YjBOMU1WTm1iVXQzUFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbw=="

	testStringE1 = "Cg=="
	testStringE2 = ""
	testStringE3 = "YQ=="
	testStringE4 = "VEZNd2RFeFRNVU5TVldSS1ZHbENVMVV3UldkVlJrcEtWbXRHVlZKVFFreFNWbXQwVEZNd2RFeFJjRTVUVld4R1kwWkdTbEZyUmtKVE1FNUNWVlZXUW1WWGJGQlNiRzh3WkZSYVVWRXhRbFpTVnpCM1ZERnNWRk5IZUVSWlZVVXlWRzFPYkU1V1NYWlVlazVHVFcwNVdWRnFaelJVU0doMVUwWktZVnB1WkRCRGEyZzJWV2wwUlZOSFVqUk5SV055Wkc1Rk1tVlhWbXBPZWxwYVpFVm5OVTlHUW5OTk1sRXpXakExZFdOc1ZUTk9hMmcxWlZoT1FsWllRa3hrUlUwelZUTk9SV1F4VlRWa1dHUmFWVWhHYUU5R2IzaFdSbU5MWkRBMVEwNUZkRFJqZW1oWFdqTlNOVll6U25sU1IwVjVaV3RhV21GRlVtdE5WMmhJVjBkT1ZtUXlTbmxUTWtadFpETm9jVkpFVmxoaWVtUjZWakE1UkU5RlVqTldSMHBPVm5wV1lWTXlTa1JXYXpCNVpFRndUbEp1UW1saFNGVjVXa1Y0YW1KWVNrZGhSVnBFVlRBMU5GVnFTblprTUd4RVpVWktlV05JYURaVFZGWkhZMGQ0ZVdKV1RsVldiSEJ6V2xWME1FNXRkRUppTUZwTVkyNWtOVlpyTVdGVFIxcENZVEZLYkVOc1RrOVdNSEJoV2xVNVZHUkZiRUpqTUdoM1pGVkthVnBEZEVwaVNHeFFaRlZLYkdGVE9VbFpNMmhQVkVNNE1rMUZTWGRTVlZwRFUwaG5NR0l5TUhKT1IxbzJUMVpDV1ZGVGRGQmFSWGhUVVdzNVRGRlZSVXROVldoMlZWaEtRMDB3YkVWbFJXZDJaVVpKZDBzeFRtaFhWRVo2VWtka00xZFZXbXhUVldNeFZVWkNkbUpFWXpCWldHUktVa1ZHVWxGVlNrSmlNR3hEVVZWU2RWcFdXbGxTUlVwWFdXcEtjMDB3VFRKbFVYQlJXbFJLYWsxRlp6UmhVM1JxV1ROYU1WSXdXbWhPYlhRMVV6SjBUVkpzU25Sa1ZUVndUakp3ZEdSVmRHOVdSV015VW0xT1YxWllWbHBTUlRCNFRXdHNiRTVJYUZWVlYzaERXVlUxTVUxVVkzcGFWR2gxUTJwR2RGVXdOVkJYYlRSNlUyMVpNMlF5YnpWWGJrSjBWa1U1VUUxNmFIUlhWRnBhVEhwS1Iwd3hhRmRTTWxWNlRWWkdTMU5GWkhoU1ZFWlRUVlp3Y2xkRVVuZE9SR2hxVFhwS1UyTllRa1JSVmxwT1ZrVkZTMk51YkZCVVZrNUVaVlZzVkZOSWNFVlRTRnBzVFROSmVWTXpTazVTU0dnMFlraENVR1Z0YjNsVFZrSlhaVVYwYTJSRmNERmhWbkJFVWtjNVExWnJhRlphTWtveVN6QTFZVlZFU1RCU1dFcDRWbGhPUlUxM2NFNWlha3B4VG5wV1EyTnBjek5pTVVZMVUyeGpNR1JJYUZOaVZWcEVWREJGTWs1RVNsaFJhemxvVFRObk1HTklaRmRXUldoelRWTjBiVlJXU2xOUmVUbEtWREI0UjFVeWNGVmFhbWcxVG0wNE0xRnNjR3hEYWxaV1ZHczFhMk5XYUZSU01Ea3hWMFJLZEZReFRYcGFhMUYyWWtSU2RtUXdXbmxSV0ZwMFducFdUMW93VG5WUlYwWXlWVlUwZDFFeFpGaFVSM2hzVTBaS00xWllaSHBOTWtaQ1pXeEtRMDVZVFROT1YyTkxXa1JyZDFKSE9WUlNWVTV1VjFWV1FrOUlaSGxoUm5CUVZVZEdkR1ZYTVc1V1ZGWk5ZVEpPVm1KWVJURmhhMmgxV1RJNVQxWXllRVJTU0c5NVRqRkJkbU5HVGtsaGVtaG9TekExYjA1R1pGZFJiSEI0VG1kdk1rMXRiM2RpVnpWclpXNXNWV1J0U2pabFIzaDBUVlZTTWxsWFdrcGpWWFJ4V210a1JtSnFXWEphYWtFMFQwUmFlbEV6YkhoVWVtaHVXbGRXZVdNeU9IZGtWMnhwVjJwQ1IwOUlaSEZUYW1oMFVtNUNOa05zUWtST2JYUlRXa1V4ZGxkRldsbGhWVkl4WWtoR1ZWVlliM1poUmtvd1lqQm9iRTlHVW5oalJsbzJaRzVzU2xGdGRIZFBXRUphWkVVeFNXTllRVE5hUTNONVlXcENVRkpGTVVSYU1XeEdVVlJHVUdOSFdVdGpSbFYzVlVoYVdGZFhhRk5hYkZVd1dsUkthMWR1U2xOamEwWktWR3hXV0ZrelZrZGhWRkpVWkRCMFRXSkVRbUZOUkZwNFlVaFdTMVZ1WkVWUk0yZDVWRVp3ZFZOSGFFVmtWa3BGWlcxc1IxZElaek5SVVhCelZVZEdiMDR5U1RGTmEzUjJZVzA1ZDJWR1VreFRibTkyVVc1c1ZFc3pZM0pqUXpsclpFaFNTRlF4U1hsaFZGWjZZMjVrV21KWGFFZGtibEpUVGtaV2NGUkdUVFJaYlRoMlRsUlNTVTV0YUV0T1JHaE5RMjE0ZVZSRVdrSlVNRVpKVjJ0d2RHTnFXVEZrVkVKd1kwWldkbUV5ZEZKa01uaHVXa1ZLTkV0NlJYcFhWRVpaUzNwV01XRXdUbTVYVlZaQ1RrZHdVVk13T0hKUmJYY3dXbGhrU2xSVlZrUldSWEJZVFZoWlMxRnRXbkJTVjFKWVpERkJOVk14YkVoTlJrWkZZVmRXZG1OdGVGVmpTR1JoWWxab05WWXliSEZXUlRGNFRqRmFNbUV6YkZSUk1EaDRWa2RWTTFGVVNYZFZNMVl4VG10a2IxcHJhRzlWU0dzd1draGFhazVuY0ZOaFZrNXpXa2hLZVZsc2NHMVJNR2h4V1ZoT1RVeDVkRU5TTVd3eVRETk9XbGt3YkhGYWEzQnlWVEp2ZW1WcmNIVlBSVEF6VFd4YVZGSnVRbGhVYkVwcVUxUkNhbHBGYkV0aFIzUlRZMWN4ZVdWWE1WUkRhM0JQVGtSc2RsTkVTa2ROVlZwd1dYcEdibVF6Vm05aU1VSldXVlpXY2xFeVpGcFNWVVoyVkVSV1MxbDZUalpYVjA0MlQxWmFNMDVGVlRWVFZsRjVVMGM1U1U0eVduaGlWelI0WlVoT2RGUXhiRFpOVjJ0TFdsZDRkMkZ0ZERaTU0yaFhVbnBvVG1Jd01WSk9SMXBKWVc1RmRtSkdSbFJXVjJoSFpXcGpNMk5GU1hwamJGSk9aV3BrYVZOdFRURmFSM2hSWVZSb2EwNVVZM1poTTJjMFZsaGFlbUZYVW1sa1IyaHZVa0Z3YkZOSE9VUlRNR3hVVW0xU2MyUnNRblpTVjFaVldXeEtkazFzYkV4alJ6RkhZVmh3UlU5SFozSk5ibFp2VW01Q1dGZHVXa3RVTVVwU1lXMXdXVTlWVGs1VGJHeDFaVlpTV0ZwVlZrNVhibEkyVmxkd2NrTnVRVEpWYkdoRVRUQldSRm94YkVaUlYzUlNUVzVXV2xWRlRrUlJNWEJQWVRGS1ZWVXpiRWxrVkd3eFRrYzVWbVZyWnpGa01rVnlZbXRTVDFGdFVrSk5SbEpKV1d4YVdXVkZhRzVaTWxKdFVUTldUMVV4U1V0V1IyaFVWVE5KTlZkV1VqWlRNSGhHWkVWUk5XRnRaRlZqU0VKTldXdEdUVkl5T1RCVU0wWjJaR3BDVmxWWFZqQmtNRVl4V2tVeGFtUkRPWFpSVjFveFpERm9NMUZyVVRWaWJWbHlZak5uZDFaSWFERmtkM0J2WVdzd2VtTnFRazlpTUd4VlZYcFNNazVWVWtKa2JGcDBVbFJyZWxKdGNHRlZWM0IzVG5wQ1NsVkZaRXhPU0dnelZteGtkRTFJUWxoWmFrWjBZakJPTVUxV1RtMWlWWFF6VUZGdmRFeFRNSFJNVlZaUFVrTkNVMVV3UldkVlJrcEtWbXRHVlZKVFFreFNWbXQwVEZNd2RFeFJidz09"
)

func TestBase64Decode(t *testing.T) {
	if val, _ := Base64Decode(testStringE1); val != testString1 {
		t.Fatal(testString1, "base64 decode incorrect")
	}
	if val, _ := Base64Decode(testStringE2); val != testString2 {
		t.Fatal(testString1, "base64 decode incorrect")
	}
	if val, _ := Base64Decode(testStringE3); val != testString3 {
		t.Fatal(testString1, "base64 decode incorrect")
	}
	if val, _ := Base64Decode(testStringE4); val != testString4 {
		t.Fatal(testString1, "base64 decode incorrect")
	}
}

func TestBase64Encode(t *testing.T) {

	if Base64Encode(testString1) != testStringE1 {
		t.Fatal("base64 encode incorrect", testString1)
	}
	if Base64Encode(testString2) != testStringE2 {
		t.Fatal("base64 encode incorrect", testString2)
	}
	if Base64Encode(testString3) != testStringE3 {
		t.Fatal("base64 encode incorrect", testString3)
	}
	if Base64Encode(testString4) != testStringE4 {
		t.Fatal(testString4, "base64 encode incorrect")
	}

}
